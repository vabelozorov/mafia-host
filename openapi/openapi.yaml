openapi: 3.0.3
info:
  title: Mafia Host API
  description: Mafia Host API
  version: 1.0.0

servers:
  - url: http://localhost:8080/
    description: Locally launched server

paths:
  /games:
    post:
      tags:
        - Games
      summary: Create a new game
      operationId: createGame
      responses:
        '201':
          description: The created game object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    description: Created game's ID
                required:
                  - id
  /games/{id}:
    get:
      tags:
        - Games
      summary: Get a game by ID
      operationId: getGame
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: The game object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameResp'
  /games/{gameId}/players:
    post:
      summary: Submit complete player roles configuration
      description: Assigns roles to all players in the game, including their names and positions
      operationId: submitPlayersConfiguration
      tags:
        - games
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Unique identifier of the game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlayerAssignmentReq'
      responses:
        '200':
          description: Players configuration successfully saved
  /games/{gameId}/day:
    post:
      tags:
        - Games
      summary: Triggers the next day in the game
      operationId: nextDay
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Unique identifier of the game
      responses:
        '201':
          description: Day ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Created day's ID
                required:
                  - id
components:
  schemas:
    GameResp:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        state:
          type: string
          example: assigning_roles
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerDto'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/RoundDto'
        gameConfig:
          type: object
          properties:
            firstNightDuration:
              type: integer
              format: int64
            roles:
              type: array
              items:
                $ref: '#/components/schemas/RoleDescription'
          required:
            - firstNightDuration
            - roles
      required:
        - id
        - state
        - gameConfig
        - players
        - rounds
    PlayerDto:
      type: object
      properties:
        name:
          type: string
        role:
          type: string
        isAlive:
          type: boolean
      required:
        - name
        - role
        - isAlive
    RoundDto:
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    RoleDescription:
      type: object
      properties:
        name:
          type: string
        team:
          type: string
        count:
          type: integer
      required:
        - name
        - team
        - count
    PlayerAssignmentReq:
      type: object
      required:
        - players
      properties:
        players:
          type: array
          items:
            type: object
            required:
              - name
              - role
            properties:
              name:
                type: string
                description: Player's name
                minLength: 1
                maxLength: 50
                example: "01-ABCD"
              role:
                type: string
                description: Role name as defined in game configuration
                example: "citizen"
          minItems: 1
          description: Array of players with their assigned roles. Position is implied by array index.
      example:
        players:
          - name: "01-ABCD"
            role: "citizen"
          - name: "02-EFGH"
            role: "mafia"
          - name: "03-IJKL"
            role: "sheriff"